// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4wuR6djweT7vAchr7evKHM
// Component: NLp0vyHVOW
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Container from "../../Container"; // plasmic-import: _Yie3ivvsh/component
import Navbar from "../../Navbar"; // plasmic-import: tjz-vApnh_/component
import Field from "../../Field"; // plasmic-import: 95iARoofeE/component
import Footer from "../../Footer"; // plasmic-import: dyqMpGltdR3/component
import { useScreenVariants as useScreenVariantsniCroJ2MX1 } from "../blank_project/PlasmicGlobalVariant__Screen"; // plasmic-import: Ni-CroJ2mX1/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "../blank_project/plasmic_blank_project.module.css"; // plasmic-import: 4wuR6djweT7vAchr7evKHM/projectcss
import sty from "./PlasmicContactPage.module.css"; // plasmic-import: NLp0vyHVOW/css

export const PlasmicContactPage__VariantProps = new Array();

export const PlasmicContactPage__ArgProps = new Array();

function PlasmicContactPage__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsniCroJ2MX1()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Container
            data-plasmic-name={"container"}
            data-plasmic-override={overrides.container}
            bg={"_1"}
            className={classNames("__wab_instance", sty.container)}
          >
            <Navbar
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              activeLink={"contact"}
              className={classNames("__wab_instance", sty.navbar)}
            />

            <p.Stack
              as={"div"}
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__sSo9G)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kfH4
                  )}
                >
                  {"Nous contacter"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__xx2Tj
                  )}
                >
                  {"Nous sommes à votre écoute!"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qCpTk
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={classNames(
                        projectcss.all,
                        projectcss.span,
                        projectcss.__wab_text,
                        projectcss.plasmic_default__inline,
                        sty.span___3PuJl
                      )}
                    >
                      {"Siège social"}
                    </span>
                    <React.Fragment>
                      {"\n205-5570 rue Cartier, Montréal\n"}
                    </React.Fragment>
                    <span
                      className={classNames(
                        projectcss.all,
                        projectcss.span,
                        projectcss.__wab_text,
                        projectcss.plasmic_default__inline,
                        sty.span__zMrZx
                      )}
                    >
                      {"Numéro de téléphone"}
                    </span>
                    <React.Fragment>{"\n438 822-1064\n"}</React.Fragment>
                    <span
                      className={classNames(
                        projectcss.all,
                        projectcss.span,
                        projectcss.__wab_text,
                        projectcss.plasmic_default__inline,
                        sty.span__yLwy
                      )}
                    >
                      {"Courriel"}
                    </span>
                    <React.Fragment>{"\ninfo@tooly.ai"}</React.Fragment>
                  </React.Fragment>
                </div>

                <div
                  data-plasmic-name={"img"}
                  data-plasmic-override={overrides.img}
                  className={classNames(projectcss.all, sty.img)}
                />
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column___1CdQt)}
              >
                <Field
                  className={classNames("__wab_instance", sty.field__d8S2X)}
                >
                  {"Nom"}
                </Field>

                <Field
                  className={classNames("__wab_instance", sty.field___3ZvBd)}
                >
                  {"Entreprise"}
                </Field>

                <Field
                  className={classNames("__wab_instance", sty.field__q9Kje)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bhiu1
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"Numéro de téléphone "}</React.Fragment>
                      <span
                        className={classNames(
                          projectcss.all,
                          projectcss.span,
                          projectcss.__wab_text,
                          projectcss.plasmic_default__inline,
                          sty.span__tjJge
                        )}
                      >
                        {"*"}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                </Field>

                <Field
                  className={classNames("__wab_instance", sty.field__mQ9I)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hgBpb
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"Adresse e-mail "}</React.Fragment>
                      <span
                        className={classNames(
                          projectcss.all,
                          projectcss.span,
                          projectcss.__wab_text,
                          projectcss.plasmic_default__inline,
                          sty.span__bZwSz
                        )}
                      >
                        {"*"}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                </Field>

                <Field
                  className={classNames("__wab_instance", sty.field__jP4I9)}
                  size={"_2"}
                >
                  {"Votre message"}
                </Field>
              </p.Stack>
            </p.Stack>
          </Container>

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "container", "navbar", "columns", "img", "footer"],
  container: ["container", "navbar", "columns", "img"],
  navbar: ["navbar"],
  columns: ["columns", "img"],
  img: ["img"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicContactPage__ArgProps,
      internalVariantPropNames: PlasmicContactPage__VariantProps
    });

    return PlasmicContactPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicContactPage";
  } else {
    func.displayName = `PlasmicContactPage.${nodeName}`;
  }
  return func;
}

export const PlasmicContactPage = Object.assign(
  // Top-level PlasmicContactPage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    container: makeNodeComponent("container"),
    navbar: makeNodeComponent("navbar"),
    columns: makeNodeComponent("columns"),
    img: makeNodeComponent("img"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicContactPage
    internalVariantProps: PlasmicContactPage__VariantProps,
    internalArgProps: PlasmicContactPage__ArgProps
  }
);

export default PlasmicContactPage;
/* prettier-ignore-end */
