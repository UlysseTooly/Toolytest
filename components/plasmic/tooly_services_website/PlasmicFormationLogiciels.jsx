// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4wuR6djweT7vAchr7evKHM
// Component: 6mELIlZc-b
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Container from "../../Container"; // plasmic-import: _Yie3ivvsh/component
import Navbar from "../../Navbar"; // plasmic-import: tjz-vApnh_/component
import Btn from "../../Btn"; // plasmic-import: gIUt2Bx9WL/component
import Footer from "../../Footer"; // plasmic-import: dyqMpGltdR3/component
import { useScreenVariants as useScreenVariantsniCroJ2MX1 } from "../blank_project/PlasmicGlobalVariant__Screen"; // plasmic-import: Ni-CroJ2mX1/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "../blank_project/plasmic_blank_project.module.css"; // plasmic-import: 4wuR6djweT7vAchr7evKHM/projectcss
import sty from "./PlasmicFormationLogiciels.module.css"; // plasmic-import: 6mELIlZc-b/css

export const PlasmicFormationLogiciels__VariantProps = new Array();

export const PlasmicFormationLogiciels__ArgProps = new Array();

function PlasmicFormationLogiciels__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsniCroJ2MX1()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Container
            data-plasmic-name={"container"}
            data-plasmic-override={overrides.container}
            bg={"_1"}
            className={classNames("__wab_instance", sty.container)}
          >
            <Navbar
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              className={classNames("__wab_instance", sty.navbar)}
            />

            <p.Stack
              as={"div"}
              data-plasmic-name={"section1"}
              data-plasmic-override={overrides.section1}
              hasGap={true}
              className={classNames(projectcss.all, sty.section1)}
            >
              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <div
                  data-plasmic-name={"column2"}
                  data-plasmic-override={overrides.column2}
                  className={classNames(projectcss.all, sty.column2)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__o8Kwd)}
                  />
                </div>
              ) : null}

              <p.Stack
                as={"div"}
                data-plasmic-name={"column1"}
                data-plasmic-override={overrides.column1}
                hasGap={true}
                className={classNames(projectcss.all, sty.column1)}
              >
                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1__wfrs4
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Une expertise numérique dédiée aux entreprises de services"
                    : "Formation logiciels"}
                </h1>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__t2Fvc
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n\nQuisque malesuada hendrerit elit, ut placerat neque tempus non. Phasellus bibendum tortor est."
                    : "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque malesuada hendrerit elit, ut placerat neque tempus non. Phasellus bibendum tortor est.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque malesuada hendrerit elit, ut placerat neque tempus non. Phasellus bibendum tortor est."}
                </div>

                <Btn
                  className={classNames("__wab_instance", sty.btn___2V2JP)}
                  type={"primary"}
                >
                  {"Savoir comment on a fait"}
                </Btn>
              </p.Stack>
            </p.Stack>
          </Container>

          <div className={classNames(projectcss.all, sty.freeBox__guj0L)}>
            <div className={classNames(projectcss.all, sty.freeBox__yUyQv)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__aFOlV
                )}
              >
                {"Quelques-unes de nos transformations numériques réussies"}
              </div>
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___4HK8G)}
            >
              <div
                data-plasmic-name={"card1"}
                data-plasmic-override={overrides.card1}
                className={classNames(projectcss.all, sty.card1)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___4Khzz)}
                >
                  <div
                    data-plasmic-name={"containerPhoto"}
                    data-plasmic-override={overrides.containerPhoto}
                    className={classNames(projectcss.all, sty.containerPhoto)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__ozs0Y)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/tooly_services/images/maskGrouppng.png",
                        fullWidth: 200,
                        fullHeight: 200,
                        aspectRatio: undefined
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox___3ELj0)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__a7QM0
                      )}
                    >
                      {"First name"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ojfPn
                      )}
                    >
                      {"Last name"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9Q0Yq
                      )}
                    >
                      {"Job title"}
                    </div>
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.columns__ivStG)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__i8V5X)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fhmDo
                      )}
                    >
                      {
                        "Fini les dépenses de centaines de dollars dans un logiciel que vous n'utilisez pas car il ne correspond pas à vos besoins"
                      }
                    </div>
                  </p.Stack>
                </div>
              </div>

              <div
                data-plasmic-name={"card12"}
                data-plasmic-override={overrides.card12}
                className={classNames(projectcss.all, sty.card12)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__ecFxJ)}>
                  <div
                    data-plasmic-name={"containerPhoto2"}
                    data-plasmic-override={overrides.containerPhoto2}
                    className={classNames(projectcss.all, sty.containerPhoto2)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__e3IMf)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/tooly_services/images/maskGrouppng.png",
                        fullWidth: 200,
                        fullHeight: 200,
                        aspectRatio: undefined
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__vAEs)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jiNqr
                      )}
                    >
                      {"First name"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nq7Nn
                      )}
                    >
                      {"Last name"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0Nvq
                      )}
                    >
                      {"Job title"}
                    </div>
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.columns__fwSf2)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__fH9Wm)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___86Wz5
                      )}
                    >
                      {
                        "Fini les dépenses de centaines de dollars dans un logiciel que vous n'utilisez pas car il ne correspond pas à vos besoins"
                      }
                    </div>
                  </p.Stack>
                </div>
              </div>

              <div
                data-plasmic-name={"card13"}
                data-plasmic-override={overrides.card13}
                className={classNames(projectcss.all, sty.card13)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__caIf6)}>
                  <div
                    data-plasmic-name={"containerPhoto3"}
                    data-plasmic-override={overrides.containerPhoto3}
                    className={classNames(projectcss.all, sty.containerPhoto3)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__kbfaa)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/tooly_services/images/maskGrouppng.png",
                        fullWidth: 200,
                        fullHeight: 200,
                        aspectRatio: undefined
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox___2OIr)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9AX3H
                      )}
                    >
                      {"First name"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__i4VqK
                      )}
                    >
                      {"Last name"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sxnr
                      )}
                    >
                      {"Job title"}
                    </div>
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.columns__d445)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column___155Un)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__r1PW
                      )}
                    >
                      {
                        "Fini les dépenses de centaines de dollars dans un logiciel que vous n'utilisez pas car il ne correspond pas à vos besoins"
                      }
                    </div>
                  </p.Stack>
                </div>
              </div>
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__jxh1T)}>
            <div className={classNames(projectcss.all, sty.freeBox__s2WfY)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hkIq7
                )}
              >
                {"Nos transformations en quelques chiffres"}
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__cHXak)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__khwyi)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__fa82R)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__tMER)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__xuKTc)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"75%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/tooly_services/images/image7.png",
                      fullWidth: 439,
                      fullHeight: 445,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___7YU94
                  )}
                >
                  {"+100"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tNgD
                  )}
                >
                  {"Transformations numériques réussie"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__hXEb4)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___7IZOh)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__jqHoW)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"75%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/tooly_services/images/image7.png",
                      fullWidth: 439,
                      fullHeight: 445,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__iaNa7
                  )}
                >
                  {"100%"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__p8GWg
                  )}
                >
                  {"des clients sont satisfaits"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__rxkry)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__wcBe)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ooSe6)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"75%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/tooly_services/images/image7.png",
                      fullWidth: 439,
                      fullHeight: 445,
                      aspectRatio: undefined
                    }}
                  />
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hn02V
                  )}
                >
                  {"+60"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__opnp2
                  )}
                >
                  {"technologies que l'on maîtrise"}
                </div>
              </p.Stack>
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__a7F3)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__iDBu5
              )}
            >
              {"Les logiciels que l'on maîtrise"}
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__pfKJd)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"card14"}
                data-plasmic-override={overrides.card14}
                hasGap={true}
                className={classNames(projectcss.all, sty.card14)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__ce6Qq)}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__i61Q
                  )}
                >
                  {"Click up"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___7Vw9D
                  )}
                >
                  {
                    "Une application qui centralise toutes vos ressources pour mener à bien vos projets. Tous les pôles vont l'adorer : gestion de projet, développement commercial, marketing, ..."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"card17"}
                data-plasmic-override={overrides.card17}
                hasGap={true}
                className={classNames(projectcss.all, sty.card17)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__ruFz8)}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___3Gt5J
                  )}
                >
                  {"Click up"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__re33F
                  )}
                >
                  {
                    "Une application qui centralise toutes vos ressources pour mener à bien vos projets. Tous les pôles vont l'adorer : gestion de projet, développement commercial, marketing, ..."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"card18"}
                data-plasmic-override={overrides.card18}
                hasGap={true}
                className={classNames(projectcss.all, sty.card18)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___6NmNy)}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__uYtL6
                  )}
                >
                  {"Click up"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jiWt
                  )}
                >
                  {
                    "Une application qui centralise toutes vos ressources pour mener à bien vos projets. Tous les pôles vont l'adorer : gestion de projet, développement commercial, marketing, ..."
                  }
                </div>
              </p.Stack>
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__mbUeC)}>
            <div className={classNames(projectcss.all, sty.freeBox__iZjv0)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dkqsO
                )}
              >
                {"Autres logiciels que nous maîtrisons"}
              </div>
            </div>

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__d83Ko)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/tooly_services_website/images/frame261Png.jpeg",
                fullWidth: 4096,
                fullHeight: 1954,
                aspectRatio: undefined
              }}
            />
          </div>

          <div className={classNames(projectcss.all, sty.freeBox___6Foc4)}>
            <div
              data-plasmic-name={"section2"}
              data-plasmic-override={overrides.section2}
              className={classNames(projectcss.all, sty.section2)}
            >
              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <div
                  data-plasmic-name={"column3"}
                  data-plasmic-override={overrides.column3}
                  className={classNames(projectcss.all, sty.column3)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__rvNZe)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "100%"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "lazy"
                        : "lazy"
                    }
                    src={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? {
                            src: "/plasmic/blank_project/images/image.png",
                            fullWidth: 1956,
                            fullHeight: 1434,
                            aspectRatio: undefined
                          }
                        : {
                            src: "/plasmic/tooly_services_website/images/adobeStock260037662Preview11Png.png",
                            fullWidth: 987,
                            fullHeight: 2329,
                            aspectRatio: undefined
                          }
                    }
                  />
                </div>
              ) : null}

              <p.Stack
                as={"div"}
                data-plasmic-name={"column4"}
                data-plasmic-override={overrides.column4}
                hasGap={true}
                className={classNames(projectcss.all, sty.column4)}
              >
                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1__oDkk
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Une expertise numérique dédiée aux entreprises de services"
                    : "Québécois(e)s?"}
                </h1>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__k33Fb
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n\nQuisque malesuada hendrerit elit, ut placerat neque tempus non. Phasellus bibendum tortor est."
                    : "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque malesuada hendrerit elit, ut placerat neque tempus non. Phasellus bibendum tortor est."}
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___1UjUj)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ycAf
                    )}
                  >
                    {
                      "*Certaines conditions s'appliquent,\ncontactez-nous pour savoir si vous êtes éligible"
                    }
                  </div>

                  <Btn
                    className={classNames("__wab_instance", sty.btn__qD0Pd)}
                    type={"primary"}
                  >
                    {"Nous contacter"}
                  </Btn>
                </p.Stack>
              </p.Stack>
            </div>
          </div>

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "container",
    "navbar",
    "section1",
    "column2",
    "column1",
    "card1",
    "containerPhoto",
    "card12",
    "containerPhoto2",
    "card13",
    "containerPhoto3",
    "card14",
    "card17",
    "card18",
    "section2",
    "column3",
    "column4",
    "footer"
  ],

  container: ["container", "navbar", "section1", "column2", "column1"],
  navbar: ["navbar"],
  section1: ["section1", "column2", "column1"],
  column2: ["column2"],
  column1: ["column1"],
  card1: ["card1", "containerPhoto"],
  containerPhoto: ["containerPhoto"],
  card12: ["card12", "containerPhoto2"],
  containerPhoto2: ["containerPhoto2"],
  card13: ["card13", "containerPhoto3"],
  containerPhoto3: ["containerPhoto3"],
  card14: ["card14"],
  card17: ["card17"],
  card18: ["card18"],
  section2: ["section2", "column3", "column4"],
  column3: ["column3"],
  column4: ["column4"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFormationLogiciels__ArgProps,
      internalVariantPropNames: PlasmicFormationLogiciels__VariantProps
    });

    return PlasmicFormationLogiciels__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFormationLogiciels";
  } else {
    func.displayName = `PlasmicFormationLogiciels.${nodeName}`;
  }
  return func;
}

export const PlasmicFormationLogiciels = Object.assign(
  // Top-level PlasmicFormationLogiciels renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    container: makeNodeComponent("container"),
    navbar: makeNodeComponent("navbar"),
    section1: makeNodeComponent("section1"),
    column2: makeNodeComponent("column2"),
    column1: makeNodeComponent("column1"),
    card1: makeNodeComponent("card1"),
    containerPhoto: makeNodeComponent("containerPhoto"),
    card12: makeNodeComponent("card12"),
    containerPhoto2: makeNodeComponent("containerPhoto2"),
    card13: makeNodeComponent("card13"),
    containerPhoto3: makeNodeComponent("containerPhoto3"),
    card14: makeNodeComponent("card14"),
    card17: makeNodeComponent("card17"),
    card18: makeNodeComponent("card18"),
    section2: makeNodeComponent("section2"),
    column3: makeNodeComponent("column3"),
    column4: makeNodeComponent("column4"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicFormationLogiciels
    internalVariantProps: PlasmicFormationLogiciels__VariantProps,
    internalArgProps: PlasmicFormationLogiciels__ArgProps
  }
);

export default PlasmicFormationLogiciels;
/* prettier-ignore-end */
