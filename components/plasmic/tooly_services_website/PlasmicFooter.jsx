// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4wuR6djweT7vAchr7evKHM
// Component: dyqMpGltdR3
import * as React from "react";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { useScreenVariants as useScreenVariantsniCroJ2MX1 } from "../blank_project/PlasmicGlobalVariant__Screen"; // plasmic-import: Ni-CroJ2mX1/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "../blank_project/plasmic_blank_project.module.css"; // plasmic-import: 4wuR6djweT7vAchr7evKHM/projectcss
import sty from "./PlasmicFooter.module.css"; // plasmic-import: dyqMpGltdR3/css
import Icon5Icon from "../tooly_services/icons/PlasmicIcon__Icon5"; // plasmic-import: Hui9IKs21/icon

export const PlasmicFooter__VariantProps = new Array();

export const PlasmicFooter__ArgProps = new Array();

function PlasmicFooter__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsniCroJ2MX1()
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <div
        data-plasmic-name={"footer"}
        data-plasmic-override={overrides.footer}
        className={classNames(projectcss.all, sty.footer)}
      >
        <div
          data-plasmic-name={"contenuFooter"}
          data-plasmic-override={overrides.contenuFooter}
          className={classNames(projectcss.all, sty.contenuFooter)}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__p32CV)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__oGzWq
              )}
            >
              {"Nos certifications"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__vxEgY
              )}
            >
              {"GOOGLE\nZAPPIER\nZOHO\nPIPEDRIVE\nCLICKUP"}
            </div>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__pRo3C)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__lfagx
              )}
            >
              {"Nos services"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__bbXjz
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    projectcss.plasmic_default__inline,
                    sty.link__wh020
                  )}
                  component={Link}
                  href={
                    "https://toolytest.plasmic.site/recommandation-logiciel/"
                  }
                  platform={"nextjs"}
                >
                  {"Recommandation de logiciels"}
                </p.PlasmicLink>
                <React.Fragment>
                  {"\nImplémentation de logiciels\n"}
                </React.Fragment>
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    projectcss.plasmic_default__inline,
                    sty.link__lpjFu
                  )}
                  component={Link}
                  href={"https://toolytest.plasmic.site/formation-logiciels/"}
                  platform={"nextjs"}
                >
                  {"Formation"}
                </p.PlasmicLink>
                <React.Fragment>
                  {"\nIntégration et automatisation\nSupport"}
                </React.Fragment>
              </React.Fragment>
            </div>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__b2LAo)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__odh6X
              )}
            >
              {"Notre agence"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__xuRSp
              )}
            >
              {"A propos de Tooly\nCarrières\nCas clients\nContact"}
            </div>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__tumIc)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__t8T1
              )}
            >
              {"Nos coordonnées"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___2NYjb
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                <span
                  className={classNames(
                    projectcss.all,
                    projectcss.span,
                    projectcss.__wab_text,
                    projectcss.plasmic_default__inline,
                    sty.span__oo5Ll
                  )}
                >
                  {"Siège social"}
                </span>
                <React.Fragment>
                  {"\n400 rue Montfort, Montréal, Canada"}
                </React.Fragment>
              </React.Fragment>
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__jvt8I
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                <span
                  className={classNames(
                    projectcss.all,
                    projectcss.span,
                    projectcss.__wab_text,
                    projectcss.plasmic_default__inline,
                    sty.span__zqnaO
                  )}
                >
                  {"Numéro de téléphone"}
                </span>
                <React.Fragment>{"\n438 822-1064"}</React.Fragment>
              </React.Fragment>
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ocu1U
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                <span
                  className={classNames(
                    projectcss.all,
                    projectcss.span,
                    projectcss.__wab_text,
                    projectcss.plasmic_default__inline,
                    sty.span__dMxqh
                  )}
                >
                  {"Courriel"}
                </span>
                <React.Fragment>{"\ninfo@tooly.ai"}</React.Fragment>
              </React.Fragment>
            </div>
          </p.Stack>
        </div>

        <div className={classNames(projectcss.all, sty.freeBox___8Yqqp)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__keArI
            )}
          >
            {"2022 Tooly, Inc."}
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__hv6)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__fss51
              )}
            >
              {"Nos média sociaux"}
            </div>

            <Icon5Icon
              className={classNames(projectcss.all, sty.svg__eFOnq)}
              role={"img"}
            />

            <Icon5Icon
              className={classNames(projectcss.all, sty.svg__cALu)}
              role={"img"}
            />
          </p.Stack>
        </div>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "footer", "contenuFooter"],
  footer: ["footer", "contenuFooter"],
  contenuFooter: ["contenuFooter"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFooter__ArgProps,
      internalVariantPropNames: PlasmicFooter__VariantProps
    });

    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFooter";
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    footer: makeNodeComponent("footer"),
    contenuFooter: makeNodeComponent("contenuFooter"),
    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps
  }
);

export default PlasmicFooter;
/* prettier-ignore-end */
