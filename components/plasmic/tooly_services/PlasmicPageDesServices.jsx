// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 4wuR6djweT7vAchr7evKHM
// Component: Ymczlosi7b
import * as React from "react";
import Head from "next/head";
import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Btn from "../../Btn"; // plasmic-import: gIUt2Bx9WL/component
import Footer from "../../Footer"; // plasmic-import: dyqMpGltdR3/component
import { useScreenVariants as useScreenVariantsniCroJ2MX1 } from "../blank_project/PlasmicGlobalVariant__Screen"; // plasmic-import: Ni-CroJ2mX1/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "../blank_project/plasmic_blank_project.module.css"; // plasmic-import: 4wuR6djweT7vAchr7evKHM/projectcss
import sty from "./PlasmicPageDesServices.module.css"; // plasmic-import: Ymczlosi7b/css

export const PlasmicPageDesServices__VariantProps = new Array();

export const PlasmicPageDesServices__ArgProps = new Array();

function PlasmicPageDesServices__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsniCroJ2MX1()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"containerPourBg"}
            data-plasmic-override={overrides.containerPourBg}
            className={classNames(projectcss.all, sty.containerPourBg)}
          >
            <div
              data-plasmic-name={"section1"}
              data-plasmic-override={overrides.section1}
              className={classNames(projectcss.all, sty.section1)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"column1"}
                data-plasmic-override={overrides.column1}
                hasGap={true}
                className={classNames(projectcss.all, sty.column1)}
              >
                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1__eqA1W
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Une expertise numérique dédiée aux entreprises de services"
                    : "Nos services"}
                </h1>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qozMv
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n\nQuisque malesuada hendrerit elit, ut placerat neque tempus non. Phasellus bibendum tortor est."
                    : "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque malesuada hendrerit elit, ut placerat neque tempus non. Phasellus bibendum tortor est."}
                </div>

                <Btn
                  className={classNames("__wab_instance", sty.btn__ku3P)}
                  type={"primary"}
                >
                  {"Savoir comment on a fait"}
                </Btn>
              </p.Stack>

              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <div
                  data-plasmic-name={"column2"}
                  data-plasmic-override={overrides.column2}
                  className={classNames(projectcss.all, sty.column2)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ctW2U)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "100%"
                        : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "lazy"
                        : "lazy"
                    }
                    src={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? {
                            src: "/plasmic/blank_project/images/image.png",
                            fullWidth: 1956,
                            fullHeight: 1434,
                            aspectRatio: undefined
                          }
                        : {
                            src: "/plasmic/tooly_services/images/adobeStock313143806Preview1Png.png",
                            fullWidth: 1612,
                            fullHeight: 1200,
                            aspectRatio: undefined
                          }
                    }
                  />
                </div>
              ) : null}
            </div>
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.columns__kXd6X)}
          >
            <div className={classNames(projectcss.all, sty.column__qNtAo)}>
              <div className={classNames(projectcss.all, sty.freeBox__jNzaM)} />
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.column__xjrI0)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__f959D
                )}
              >
                {"Recommandation de logiciels"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xc3Pv
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n\nQuisque malesuada hendrerit elit, ut placerat neque tempus non. Phasellus bibendum tortor est."
                  : "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque malesuada hendrerit elit, \n\nut placerat neque tempus non. Phasellus bibendum tortor est.ut placerat neque tempus non. Phasellus bibendum tortor est."}
              </div>

              <Btn
                className={classNames("__wab_instance", sty.btn__u6G24)}
                type={"tertiary"}
              >
                {"En savoir plus"}
              </Btn>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.columns__z8Nyn)}
          >
            <div className={classNames(projectcss.all, sty.column__nodjz)}>
              <div className={classNames(projectcss.all, sty.freeBox__a5Ot7)} />
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.column__n1Lpk)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__gGqrt
                )}
              >
                {"Implémentation de logiciels"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___38256
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n\nQuisque malesuada hendrerit elit, ut placerat neque tempus non. Phasellus bibendum tortor est."
                  : "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque malesuada hendrerit elit, \n\nut placerat neque tempus non. Phasellus bibendum tortor est.ut placerat neque tempus non. Phasellus bibendum tortor est."}
              </div>

              <Btn
                className={classNames("__wab_instance", sty.btn__qZ0I)}
                type={"tertiary"}
              >
                {"En savoir plus"}
              </Btn>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.columns__nRx4U)}
          >
            <div className={classNames(projectcss.all, sty.column__hbKc7)}>
              <div className={classNames(projectcss.all, sty.freeBox__oMQi6)} />
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.column__its3R)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___2XYq3
                )}
              >
                {"Formation de logiciels"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__rNjTm
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n\nQuisque malesuada hendrerit elit, ut placerat neque tempus non. Phasellus bibendum tortor est."
                  : "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque malesuada hendrerit elit, \n\nut placerat neque tempus non. Phasellus bibendum tortor est.ut placerat neque tempus non. Phasellus bibendum tortor est."}
              </div>

              <Btn
                className={classNames("__wab_instance", sty.btn__ekacE)}
                type={"tertiary"}
              >
                {"En savoir plus"}
              </Btn>
            </p.Stack>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.columns__nmoLj)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.column__g8Hr)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__bgva3
                )}
              >
                {"Support 7j/7"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__edUmW
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n\nQuisque malesuada hendrerit elit, ut placerat neque tempus non. Phasellus bibendum tortor est."
                  : "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque malesuada hendrerit elit, \n\nut placerat neque tempus non. Phasellus bibendum tortor est.ut placerat neque tempus non. Phasellus bibendum tortor est."}
              </div>

              <Btn
                className={classNames("__wab_instance", sty.btn__xZlKw)}
                type={"tertiary"}
              >
                {"En savoir plus"}
              </Btn>
            </p.Stack>

            <div className={classNames(projectcss.all, sty.column__gHOwV)}>
              <div className={classNames(projectcss.all, sty.freeBox__tj30F)}>
                <div className={classNames(projectcss.all, sty.freeBox__s7Qnq)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__h6XWi)}
                  />
                </div>
              </div>
            </div>
          </p.Stack>

          <div className={classNames(projectcss.all, sty.freeBox__hym7D)}>
            <div className={classNames(projectcss.all, sty.freeBox__x2Mg8)}>
              <div className={classNames(projectcss.all, sty.freeBox__c9P)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dk24V
                  )}
                >
                  {"Quelques exemples de processus que l'on maîtrise"}
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__dHjn)}>
                <div className={classNames(projectcss.all, sty.columns__iriid)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__jlhQ6)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__eHmQ4)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__fyFc5)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/tooly_services/images/frame2791Png.png",
                          fullWidth: 440,
                          fullHeight: 441,
                          aspectRatio: undefined
                        }}
                      />
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aeQz0
                      )}
                    >
                      {"Processus de ventes"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lBm2W
                      )}
                    >
                      {
                        "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque malesuada hendrerit elit"
                      }
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column___5ZZ7I)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__zCxQt)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__d2QGb)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/tooly_services/images/frame2792Png.png",
                          fullWidth: 441,
                          fullHeight: 441,
                          aspectRatio: undefined
                        }}
                      />
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gKsEe
                      )}
                    >
                      {"Processus de fidélisation de la clientèle"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__d30Xl
                      )}
                    >
                      {
                        "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque malesuada hendrerit elit"
                      }
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column___3S2G0)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__qwCox)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__qzVu6)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/tooly_services/images/frame2794Png.png",
                          fullWidth: 440,
                          fullHeight: 441,
                          aspectRatio: undefined
                        }}
                      />
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__t76M5
                      )}
                    >
                      {"Processus de gestion des ressources humaines"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lv9R3
                      )}
                    >
                      {
                        "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque malesuada hendrerit elit"
                      }
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__cwtaF)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__siFnu)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__tWkaw)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/tooly_services/images/frame2795Png.png",
                          fullWidth: 441,
                          fullHeight: 441,
                          aspectRatio: undefined
                        }}
                      />
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lqpwP
                      )}
                    >
                      {"Processus de logistique"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gNo6I
                      )}
                    >
                      {
                        "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque malesuada hendrerit elit"
                      }
                    </div>
                  </p.Stack>
                </div>
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__nnsb7)}>
            <div className={classNames(projectcss.all, sty.freeBox__xpYiH)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cSDE
                )}
              >
                {"Nos clients en parlent mieux que nous !"}
              </div>
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___848J5)}
            >
              <div
                data-plasmic-name={"card1"}
                data-plasmic-override={overrides.card1}
                className={classNames(projectcss.all, sty.card1)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__krptU)}>
                  <div
                    data-plasmic-name={"containerPhoto"}
                    data-plasmic-override={overrides.containerPhoto}
                    className={classNames(projectcss.all, sty.containerPhoto)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__gdvpc)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/tooly_services/images/maskGrouppng.png",
                        fullWidth: 200,
                        fullHeight: 200,
                        aspectRatio: undefined
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__ka4AH)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ltqVt
                      )}
                    >
                      {"First name"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aekrV
                      )}
                    >
                      {"Last name"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dn6AU
                      )}
                    >
                      {"Job title"}
                    </div>
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.columns__ekXte)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__kiGYg)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pH1Jf
                      )}
                    >
                      {
                        "Fini les dépenses de centaines de dollars dans un logiciel que vous n'utilisez pas car il ne correspond pas à vos besoins"
                      }
                    </div>
                  </p.Stack>
                </div>
              </div>

              <div
                data-plasmic-name={"card12"}
                data-plasmic-override={overrides.card12}
                className={classNames(projectcss.all, sty.card12)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__lm6Li)}>
                  <div
                    data-plasmic-name={"containerPhoto2"}
                    data-plasmic-override={overrides.containerPhoto2}
                    className={classNames(projectcss.all, sty.containerPhoto2)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___5R4KX)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/tooly_services/images/maskGrouppng.png",
                        fullWidth: 200,
                        fullHeight: 200,
                        aspectRatio: undefined
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__stEml)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__moXyW
                      )}
                    >
                      {"First name"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nnyxV
                      )}
                    >
                      {"Last name"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pWfWo
                      )}
                    >
                      {"Job title"}
                    </div>
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.columns__lwLFx)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__eLnMx)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ijyEd
                      )}
                    >
                      {
                        "Fini les dépenses de centaines de dollars dans un logiciel que vous n'utilisez pas car il ne correspond pas à vos besoins"
                      }
                    </div>
                  </p.Stack>
                </div>
              </div>

              <div
                data-plasmic-name={"card13"}
                data-plasmic-override={overrides.card13}
                className={classNames(projectcss.all, sty.card13)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__slnTs)}>
                  <div
                    data-plasmic-name={"containerPhoto3"}
                    data-plasmic-override={overrides.containerPhoto3}
                    className={classNames(projectcss.all, sty.containerPhoto3)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___6V6IU)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/tooly_services/images/maskGrouppng.png",
                        fullWidth: 200,
                        fullHeight: 200,
                        aspectRatio: undefined
                      }}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__tHOi)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__a4Iq9
                      )}
                    >
                      {"First name"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bxZUk
                      )}
                    >
                      {"Last name"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rm6U0
                      )}
                    >
                      {"Job title"}
                    </div>
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.columns__rSGs)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__bEo5Q)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__a7Rzo
                      )}
                    >
                      {
                        "Fini les dépenses de centaines de dollars dans un logiciel que vous n'utilisez pas car il ne correspond pas à vos besoins"
                      }
                    </div>
                  </p.Stack>
                </div>
              </div>
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox___19P)}>
            <div
              data-plasmic-name={"section2"}
              data-plasmic-override={overrides.section2}
              className={classNames(projectcss.all, sty.section2)}
            >
              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <div
                  data-plasmic-name={"column4"}
                  data-plasmic-override={overrides.column4}
                  className={classNames(projectcss.all, sty.column4)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tRePk)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__vrPyv)}
                    />
                  </div>
                </div>
              ) : null}

              <p.Stack
                as={"div"}
                data-plasmic-name={"column3"}
                data-plasmic-override={overrides.column3}
                hasGap={true}
                className={classNames(projectcss.all, sty.column3)}
              >
                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1__qtHk
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Une expertise numérique dédiée aux entreprises de services"
                    : "Vous souhaitez en savoir plus sur notre  accompagnement"}
                </h1>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hYpHy
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n\nQuisque malesuada hendrerit elit, ut placerat neque tempus non. Phasellus bibendum tortor est."
                    : "Découvrez pourquoi nous sommes pationnés par les entreprises de services"}
                </div>

                <Btn
                  className={classNames("__wab_instance", sty.btn__fqCU)}
                  type={"primary"}
                >
                  {"En savoir plus"}
                </Btn>
              </p.Stack>
            </div>
          </div>

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "containerPourBg",
    "section1",
    "column1",
    "column2",
    "card1",
    "containerPhoto",
    "card12",
    "containerPhoto2",
    "card13",
    "containerPhoto3",
    "section2",
    "column4",
    "column3",
    "footer"
  ],

  containerPourBg: ["containerPourBg", "section1", "column1", "column2"],
  section1: ["section1", "column1", "column2"],
  column1: ["column1"],
  column2: ["column2"],
  card1: ["card1", "containerPhoto"],
  containerPhoto: ["containerPhoto"],
  card12: ["card12", "containerPhoto2"],
  containerPhoto2: ["containerPhoto2"],
  card13: ["card13", "containerPhoto3"],
  containerPhoto3: ["containerPhoto3"],
  section2: ["section2", "column4", "column3"],
  column4: ["column4"],
  column3: ["column3"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPageDesServices__ArgProps,
      internalVariantPropNames: PlasmicPageDesServices__VariantProps
    });

    return PlasmicPageDesServices__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPageDesServices";
  } else {
    func.displayName = `PlasmicPageDesServices.${nodeName}`;
  }
  return func;
}

export const PlasmicPageDesServices = Object.assign(
  // Top-level PlasmicPageDesServices renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    containerPourBg: makeNodeComponent("containerPourBg"),
    section1: makeNodeComponent("section1"),
    column1: makeNodeComponent("column1"),
    column2: makeNodeComponent("column2"),
    card1: makeNodeComponent("card1"),
    containerPhoto: makeNodeComponent("containerPhoto"),
    card12: makeNodeComponent("card12"),
    containerPhoto2: makeNodeComponent("containerPhoto2"),
    card13: makeNodeComponent("card13"),
    containerPhoto3: makeNodeComponent("containerPhoto3"),
    section2: makeNodeComponent("section2"),
    column4: makeNodeComponent("column4"),
    column3: makeNodeComponent("column3"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicPageDesServices
    internalVariantProps: PlasmicPageDesServices__VariantProps,
    internalArgProps: PlasmicPageDesServices__ArgProps
  }
);

export default PlasmicPageDesServices;
/* prettier-ignore-end */
